<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Next主题优化(三)]]></title>
    <url>%2FHexo%2FNext%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96-%E4%B8%89%2F</url>
    <content type="text"><![CDATA[1.博文置顶 打开Hexo 站点下node_modules/hexo-generator-index/lib/generator.js文件。代码全部替换为：12345678910111213141516171819202122232425262728'use strict';var pagination = require('hexo-pagination');module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; 打开文章添加top字段,设置数值，数值越大文章越靠前1234567---layout: layouttitle: 标签1date: 2017-08-18 15:41:18tags: 标签1top: 100--- 2.统计功能,显示文章字数统计,阅读时长,总字数 在Hexo 站点下 1$ npm i --save hexo-wordcount 打开 主题配置文件 ，搜索关键字post_wordcount 1234567891011# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true #字数统计 wordcount: true #预览时间 min2read: true #总字数，显示在页面底部 totalcount: false separated_meta: true 3.修改文章内文本连接样式 打开 themes/next/source/css/_custom/下的custom.styl,添加代码1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 4.每篇文章末尾统一添加本文结束标记 在路径/themes/next/layout/_macro中新建 passage-end-tag.swig 文件,并添加以下内容： 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;------ 本文结束------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 打开themes/next/layout/_macro/下的post.swig文件,添加： 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125; &lt;/div&gt; 然后打开 主题配置文件 ,在末尾添加： 123# 文章末尾添加“本文结束”标记passage_end_tag:enabled: true 5.文章顶部显示更新时间 打开 主题配置文件 ,搜索关键字updated_at设置为true 123456# Post meta display settingspost_meta: item_text: true created_at: true updated_at: ture categories: true 编辑文章,增加关键字updated 12345---layout: layouttitle: 关于date: 2017-08-18 15:41:18updated: 2017-09-05 20:18:54 #手动添加更新时间 6.修改访问URL路径 默认情况下访问URL路径为：domain/2017/08/18/关于本站,修改为domain/About/关于本站 编辑 站点配置文件 ，修改其中的permalink字段1permalink: :category/:title/ 7.给代码块添加复制功能7.1 下载插件clipboard.js7.2 打开themes/next/source/lib/,新建文件夹clipboard7.3 把下载clipboard.js下的src文件夹下的文件拖动到clipboard文件夹下7.4 打开themes/next/source/js/src/,新建文件custom.js,代码如下:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102//此函数用于创建复制按钮function createCopyBtns() &#123; var $codeArea = $("figure table"); //查看页面是否具有代码区域，没有代码块则不创建 复制按钮 if ($codeArea.length &gt; 0) &#123; //复制成功后将要干的事情 function changeToSuccess(item) &#123; $imgOK = $("#copyBtn").find("#imgSuccess"); if ($imgOK.css("display") == "none") &#123; $imgOK.css(&#123; opacity: 0, display: "block" &#125;); $imgOK.animate(&#123; opacity: 1 &#125;, 1000); setTimeout(function() &#123; $imgOK.animate(&#123; opacity: 0 &#125;, 2000); &#125;, 2000); setTimeout(function() &#123; $imgOK.css("display", "none"); &#125;, 4000); &#125;; &#125;; //创建 全局复制按钮，仅有一组。包含：复制按钮，复制成功响应按钮 //值得注意的是：1.按钮默认隐藏，2.位置使用绝对位置 position: absolute; (position: fixed 也可以，需要修改代码) $(".post-body").before('&lt;div id="copyBtn" style="opacity: 0; position: absolute;top:0px;display: none;line-height: 1; font-size:1.5em"&gt;&lt;span id="imgCopy" &gt;&lt;i class="fa fa-paste fa-fw"&gt;&lt;/i&gt;&lt;/span&gt;&lt;span id="imgSuccess" style="display: none;"&gt;&lt;i class="fa fa-check-circle fa-fw" aria-hidden="true"&gt;&lt;/i&gt;&lt;/span&gt;'); //创建 复制 插件，绑定单机时间到 指定元素，支持JQuery var clipboard = new Clipboard('#copyBtn', &#123; target: function() &#123; //返回需要复制的元素内容 return document.querySelector("[copyFlag]"); &#125;, isSupported: function() &#123; //支持复制内容 return document.querySelector("[copyFlag]"); &#125; &#125;); //复制成功事件绑定 clipboard.on('success', function(e) &#123; //清除内容被选择状态 e.clearSelection(); changeToSuccess(e); &#125;); //复制失败绑定事件 clipboard.on('error', function(e) &#123; console.error('Action:', e.action); console.error('Trigger:', e.trigger); &#125;); //鼠标 在复制按钮上滑动和离开后渐变显示/隐藏效果 $("#copyBtn").hover( function() &#123; $(this).stop(); $(this).css("opacity", 1); &#125;, function() &#123; $(this).animate(&#123; opacity: 0 &#125;, 2000); &#125; ); &#125;&#125;//感应鼠标是否在代码区$("figure").hover( function() &#123; //-------鼠标活动在代码块内 //移除之前含有复制标志代码块的 copyFlag $("[copyFlag]").removeAttr("copyFlag"); //在新的（当前鼠标所在代码区）代码块插入标志：copyFlag $(this).find(".code").attr("copyFlag", 1); //获取复制按钮 $copyBtn = $("#copyBtn"); if ($copyBtn.lenght != 0) &#123; //获取到按钮的前提下进行一下操作 //停止按钮动画效果 //设置为 显示状态 //修改 复制按钮 位置到 当前代码块开始部位 //设置代码块 左侧位置 $copyBtn.stop(); $copyBtn.css("opacity", 0.8); $copyBtn.css("display", "block"); $copyBtn.css("top", parseInt($copyBtn.css("top")) + $(this).offset().top - $copyBtn.offset().top + 3); $copyBtn.css("left", -$copyBtn.width() - 3); &#125; &#125;, function() &#123; //-------鼠标离开代码块 //设置复制按钮可见度 2秒内到 0 $("#copyBtn").animate(&#123; opacity: 0 &#125;, 2000); &#125;);//页面载入完成后，创建复制按钮$(document).ready(function() &#123; createCopyBtns();&#125;); 7.5 打开themes/next/layout/_custom/,新建文件custom.swig，代码如下:12&lt;script type="text/javascript" src="/lib/clipboard/clipboard.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="/js/src/custom.js"&gt;&lt;/script&gt; 7.6 修改文件themes/next/layout/_layout.swig,在标签&lt;/body&gt;上面插入代码:1&#123;% include &apos;_custom/custom.swig&apos; %&#125; 8.新建404界面 在Hexo 站点下,输入 hexo new page 404,默认在Hexo 站点下/source/404/index.md 打开新建的404界面，在顶部插入一行，写上permalink: /404，这表示指定该页固定链接为 http://&quot;主页&quot;/404.html 123456---title: #404 Not Found：该页无法显示date: 2017-09-06 15:37:18comments: falsepermalink: /404--- 如果你不想编辑属于自己的404界面,可以显示腾讯公益404界面,代码如下： 123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="回到我的主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 9.静态资源压缩 在Hexo 站点下 1$ npm install gulp -g 安装gulp插件 12345npm install gulp-minify-css --savenpm install gulp-uglify --savenpm install gulp-htmlmin --savenpm install gulp-htmlclean --savenpm install gulp-imagemin --save 在Hexo 站点下添加gulpfile.js文件，文件内容如下: 123456789101112131415161718192021222324252627282930313233343536373839404142434445var gulp = require('gulp');var minifycss = require('gulp-minify-css');var uglify = require('gulp-uglify');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');var imagemin = require('gulp-imagemin');// 压缩css文件gulp.task('minify-css', function() &#123; return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public'));&#125;);// 压缩html文件gulp.task('minify-html', function() &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest('./public'))&#125;);// 压缩js文件gulp.task('minify-js', function() &#123; return gulp.src('./public/**/*.js') .pipe(uglify()) .pipe(gulp.dest('./public'));&#125;);// 压缩 public/demo 目录内图片gulp.task('minify-images', function() &#123; gulp.src('./public/demo/**/*.*') .pipe(imagemin(&#123; optimizationLevel: 5, //类型：Number 默认：3 取值范围：0-7（优化等级） progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片 interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染 multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化 &#125;)) .pipe(gulp.dest('./public/uploads'));&#125;);// 默认任务gulp.task('default', [ 'minify-html','minify-css','minify-js','minify-images']); 只需要每次在执行generate命令后执行gulp就可以实现对静态资源的压缩，压缩完成后执行deploy命令同步到服务器 123hexo ggulphexo d 10.本地站点推送到GitHub上 在Hexo 站点下 1$ npm install hexo-deployer-git --save 在 站点配置文件 中配置deploy 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: &lt;repository url&gt; #your github.io.git branch: master $ hexo clean $ hexo d --g123hexo g # 生成本地 public 静态文件hexo d # 部署到 Github 上# 也可以缩写成：hexo g --d]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Next主题优化(二)]]></title>
    <url>%2FHexo%2FNext%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96-%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[1.主页文章添加边框阴影效果 打开themes/next/source/css/_custom/下的custom.styl,向里面加代码:12345678// 主页文章添加阴影效果.post &#123; margin-top: 0px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125; 2.修改文章间分割线 打开themes/next/source/css/_common/components/post/下的post-eof.styl,修改:12345678910.posts-expand &#123; .post-eof &#123; display: block; // margin: $post-eof-margin-top auto $post-eof-margin-bottom; width: 0%; //分割线长度 height: 0px; // 分割线高度 background: $grey-light; text-align: center; &#125;&#125; 3.代码块自定义样式代码块 打开themes/next/source/css/_custom/下的custom.styl,向里面加代码(颜色可以自己定义)123456789101112131415// Custom styles.code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125;// 边框的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 4.开启版权声明 主题配置文件 ,搜索关键字post_copyright,enable改为true12345# Declare license on postspost_copyright: enable: true license: CC BY-NC-SA 3.0 license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/ 5.自定义文章底部版权声明 5.1在目录 themes/next/layout/_macro/下添加 my-copyright.swig,内容如下:123456789101112131415161718192021222324252627282930313233&#123;% if page.copyright %&#125;&lt;div class="my_post_copyright"&gt; &lt;script src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script type="text/javascript" src="http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js"&gt;&lt;/script&gt; &lt;script src="http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js"&gt;&lt;/script&gt; &lt;link rel="stylesheet" type="text/css" href="http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css"&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:mm:ss") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:mm:ss") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;" title="&#123;&#123; page.title &#125;&#125;"&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class="copy-path" title="点击复制文章链接"&gt;&lt;i class="fa fa-clipboard" data-clipboard-text="&#123;&#123; page.permalink &#125;&#125;" aria-label="复制成功！"&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class="fa fa-creative-commons"&gt;&lt;/i&gt; &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" title="Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt; &lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard('.fa-clipboard'); clipboard.on('success', $(function()&#123; $(".fa-clipboard").click(function()&#123; swal(&#123; title: "", text: '复制成功', html: false, timer: 500, showConfirmButton: false &#125;); &#125;); &#125;)); &lt;/script&gt;&#123;% endif %&#125; 5.2在目录themes/next/source/css/_common/components/post/下添加my-post-copyright.styl,内容如下:123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #333333; // title color font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #0593d3; // link color text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 5.3 修改themes/next/layout/_macro/post.swig,在代码如下12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include &apos;wechat-subscriber.swig&apos; %&#125; &lt;/div&gt; &#123;% endif %&#125; 之前添加增加如下代码：12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;my-copyright.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 修改themes/next/source/css/_common/components/post/post.styl文件，在最后一行增加代码：1@import &quot;my-post-copyright&quot; 5.4设置新建文章自动开启copyright,即新建文章自动显示自定义的版权声明,设置your site/scaffolds/post.md文件12345678---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:type: &quot;categories&quot;categories:copyright: true #新增,开启--- 6.在右上角或者左上角实现fork me on github 选择样式GitHub Ribbons,修改图片跳转链接,并复制文本框中的代码 打开themes/next/layout/下的_layout.swig文件，把代码复制到&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;下面 7.修改文章底部的那个带#号的标签 打开themes/next/layout/_macro/下的post.swig文件,搜索rel=&quot;tag&quot;&gt;#,将 # 换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;12345&lt;div class="post-tags"&gt; &#123;% for tag in post.tags %&#125; &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tag"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; &#123;% endfor %&#125;&lt;/div&gt; 8.添加顶部加载条 打开 主题配置文件 ，搜索关键字pace,设置为true,可以更换加载样式12345678910111213141516171819# Progress bar in the top during page loading.pace: true# Themes list:#pace-theme-big-counter#pace-theme-bounce#pace-theme-barber-shop#pace-theme-center-atom#pace-theme-center-circle#pace-theme-center-radar#pace-theme-center-simple#pace-theme-corner-indicator#pace-theme-fill-left#pace-theme-flash#pace-theme-loading-bar#pace-theme-mac-osx#pace-theme-minimal# For example# pace_theme: pace-theme-center-simplepace_theme: pace-theme-flash #替换更换样式 9.本地搜索 在你Hexo 站点下 1$ npm install hexo-generator-searchdb --save 打开 站点配置文件 ,添加配置 12345search: path: search.xml field: post format: html limit: 10000 打开 主题配置文件 ,搜索关键字local_search,设置为true 123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 10.修改网页底部 10.1在图标库中找到你自己喜欢的图标, 修改桃心,打开 主题配置文件 ,搜索关键字authoricon,替换图标名12# icon between year and author @Footerauthoricon: id-card 10.2隐藏网页底部Hexo 强力驱动 打开 主题配置文件 ,搜索关键字copyright12# Footer `powered-by` and `theme-info` copyrightcopyright: false]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Next主题优化(一)]]></title>
    <url>%2FHexo%2FNext%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96-%E4%B8%80%2F</url>
    <content type="text"><![CDATA[1.常用命令 Hexo的命令极简单，安装后只需要记住四个常用的即可。执行命令需要Git当前处于blog文件夹根目录下。 generate 生成静态文件。 1$ hexo g server 启动服务器。 1$ hexo s deploy 部署网站。部署网站前，需要预先生成静态文件。 1$ hexo d clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)。 1$ hexo clean 卸载Hexo 1$ npm uninstall hexo-cli -g 2.更换主题,以Next主题为例12$ cd your-hexo-site$ git clone https://github.com/iissnan/hexo-theme-next themes/next 修改 站点配置文件 下的主题1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next 3.站点初始设置 打开 站点配置文件 1234567# Sitetitle: Hexo #网站标题subtitle: #网站副标题description: #网站描述author: author #您的名字language: zh-Hans #网站使用的语言timezone: Asia/Shanghai #网站时区。Hexo 默认使用您电脑的时区。 4.设置主题风格 打开 主题配置文件 ,搜索 scheme关键字，将你需用启用的scheme 前面注释 # 去除即可。123456789# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes#scheme: Muse # 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白#scheme: Mist # Muse 的紧凑版本，整洁有序的单栏外观scheme: Pisces # 双栏 Scheme，小家碧玉似的清新#scheme: Gemini # 类似 Pisces 5.设置菜单项的显示文本和图标 NexT 使用的是 Font Awesome 提供的图标， Font Awesome提供了600+的图标，可以满足绝大的多数的场景，同时无须担心在Retina屏幕下 图标模糊的问题。 5.1设置菜单项的显示文本 打开themes/next/languages下的zh-Hans.yml文件,搜索 menu关键字，修改对应中文或者新增 123456789101112menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 search: 搜索 schedule: 日程表 sitemap: 站点地图 commonweal: 公益404 # 新增menu catalogue: 目录 5.2设定菜单项的图标 打开 主题配置文件 ，搜索 menu_icons关键字，修改对应图标名称或者新增对应menu的图标 123456789101112131415161718# Enable/Disable menu icons.# Icon Mapping:# Map a menu item to a specific FontAwesome icon name.# Key is the name of menu item and value is the name of FontAwesome icon. Key is case-senstive.# When an question mask icon presenting up means that the item has no mapping icon.menu_icons: enable: true #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome home: home about: user categories: th schedule: calendar tags: tags archives: archive sitemap: sitemap commonweal: heartbeat #新增menu_icon catalogue: th-list 5.3设置菜单项对应的文件目录 打开 主题配置文件 ,以#注释原有的菜单项，或者新增新的菜单项 123456789101112131415# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)menu: home: / categories: /categories/ #about: /about/ archives: /archives/ #tags: /tags/ #sitemap: /sitemap.xml #commonweal: /404/ #新增menu catalogue: /catalogues/ 5.4创建菜单项对应文件目录,以分类为例 除了home，archives,/后面都需要手动创建这个页面 在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories 12$ cd your-hexo-site$ hexo new page categories 5.5编辑刚新建的页面,设置分类12345title: 分类date: 2014-12-22 12:39:04type: &quot;categories&quot;categories: Testing #分类名--- 6.头像设置 6.1添加头像 打开 主题配置文件 ，搜索 Sidebar Avatar关键字，去掉avatar前面的# 1234# Sidebar Avatar# in theme directory(source/images): /images/avatar.jpg# in site directory(source/uploads): /uploads/avatar.jpgavatar: http://example.com/avatar.png 或者使用本地图片,把图片放入themes/next/source/images下,修改avatar 1avatar: /images/blogLogo.png 6.2设置头像边框为圆形框 打开位于themes/next/source/css/_common/components/sidebar/下的sidebar-author.syl文件,修改如下123456789101112.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; // 修改头像边框 border-radius: 50%; -webkit-border-radius: 50%; -moz-border-radius: 50%;&#125; 6.3特效：鼠标放置头像上旋转123456789101112131415161718192021.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; // 修改头像边框 border-radius: 50%; -webkit-border-radius: 50%; -moz-border-radius: 50%; // 设置旋转 transition: 1.4s all;&#125;// 可旋转的圆形头像,`hover`动作.site-author-image:hover &#123; -webkit-transform: rotate(360deg); -moz-transform: rotate(360deg); -ms-transform: rotate(360deg); -transform: rotate(360deg);&#125; 7.显示当前浏览进度 打开 主题配置文件 ,搜索关键字scrollpercent,把false改为true 12# Scroll percent label in b2t buttonscrollpercent: true 如果想把top按钮放在侧边栏,打开 主题配置文件 ,搜索关键字b2t,把false改为true 12345# Back to top in sidebar b2t: true # Scroll percent label in b2t button scrollpercent: true 8.文章创建和删除 创建文章 12$ cd you-site$ hexo new post &quot;you title&quot; 文章目录you-site/source/_posts 删除文章 123$ hexo clean在/source/_posts/中直接删除了相应的.md文件$ hexo g 9.标签设置 9.1创建标签目录 hexo初始是没有标签目录的需要自己创建 12$ cd you-site$ hexo new page tags 创建完成后,打开you-site/source/tags的index.md,修改如下 12345---title: #页面主题date: 2017-08-18 15:00:55 #当前创建文件时间type: &quot;tags&quot; # 设置页面类型--- 得到如下界面 9.2设置标签云 标签云的生成:是根据你创建的文章，设定标签类型，自定生成的。某个标签下的 文章越多则，标签越高大 设置文章标签:打开you-site/source/_posts的you title.md,默认tags:为空,后面加上标签名即可1234567---layout: layouttitle: 标签1date: 2017-08-18 15:41:18tags: 标签1 #此文章在`标签1 `标签下#tags: [标签1,标签2] #此文章在`标签1,标签2`下--- 10.侧边栏设置10.1设置侧边栏社交链接 打开 主题配置文件 ,搜索关键字social,然后添加社交站点名称与地址即可。12345678# Social linkssocial: GitHub: https://github.com/your-user-name Twitter: https://twitter.com/your-user-name Weibo: https://weibo.com/your-user-name douban: https://douban.com/people/your-user-name zhihu: https://www.zhihu.com/people/your-user-name # 等等 10.2设置侧边栏社交图标 打开 主题配置文件 ,搜索关键字social_icons，添加社交站点名称（注意大小写）图标，Font Awesome图标地址 12345678social_icons: enable: true # Icon Mappings. # KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome GitHub: github Twitter: twitter Weibo: weibo Linkedin: linkedin 10.3RSS 在你Hexo 站点目录下 1$ npm install hexo-generator-feed --save 打开 站点配置文件 ,添加如下配置 12345678# feed# Dependencies: https://github.com/hexojs/hexo-generator-feedfeed: type: atom path: atom.xml limit: 20 hub: content: 10.4友情链接 打开 主题配置文件 ,搜索关键字Blog rolls1234567# Blog rollslinks_title: 友情链接 #标题links_layout: block #布局，一行一个连接#links_layout: inlinelinks: #连接 baidu: http://example.com/ google: http://example.com/]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[书写样式]]></title>
    <url>%2Fwriting%2F%E6%96%87%E7%AB%A0%E4%B9%A6%E5%86%99%E6%A0%B7%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[1.文本居中引用立志飞龙腾空起 创学彩凤因云翔 2.文字居中显示这一行需要居中 3.Bootstrap Calloutdefault primary success info warning danger 4.文字增加背景色块 站点配置文件 主题配置文件 站点配置文件 主题配置文件 5.下载样式 Download Now 6.在文档中增加图标 支持MarkdownHexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。 一件部署只需一条指令即可部署到Github Pages，或其他网站 丰富的插件Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。]]></content>
      <categories>
        <category>writing</category>
      </categories>
      <tags>
        <tag>写作技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于本站]]></title>
    <url>%2FAbout%2F%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99%E7%82%B9%2F</url>
    <content type="text"><![CDATA[主题 — NexT.Pisces NexT版本: 5.1.2 2017-08-18 站点创建 2017-08-19 站点开始优化 2017-09-05 新增1.新增每篇文章更新时间,updated,改为文章底部显示2.修改访问URL路径,domain/2017/08/18/关于本站-&gt;domain/About/关于本站 2017-09-06 优化1.优化分类标签,修复侧边栏分类不能点击2.新增404界面3.自定义代码块样式4.自定义文章底部版权信息5.新增代码块复制功能 2017-09-07 新增文章《书写样式》 2017-09-111.新增《Next主题优化(一)》2.新增《Next主题优化(二)》3.新增《Next主题优化(三)》4.修复文章底部版权信息,显示更新时间错误 2017-09-121.添加Google Analytics2.添加不蒜子3.购买域名 2017-09-08 站点发布到GitHub]]></content>
      <categories>
        <category>About</category>
      </categories>
      <tags>
        <tag>关于</tag>
      </tags>
  </entry>
</search>
